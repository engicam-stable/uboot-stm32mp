/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
/*
 * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
 * Author: STM32CubeMX code generation for STMicroelectronics.
 */

/dts-v1/;
#include "stm32mp157c.dtsi"
#include "stm32mp157caa-pinctrl.dtsi"
#include "stm32mp157c-m4-srm.dtsi"
#include <dt-bindings/gpio/gpio.h>

/* USER CODE BEGIN includes */
/* USER CODE END includes */

/ {
	model = "STMicroelectronics custom STM32CubeMX board";
	compatible = "st,stm32mp157a-icorestm32-mx", "st,stm32mp157";
#if 0
    config {
            st,reset-phy-gpios = <&gpiod 10 GPIO_ACTIVE_LOW>;
    };
#endif
    memory@c0000000 {
        reg = <0xc0000000 0x20000000>;

        /* USER CODE BEGIN memory */
        /* USER CODE END memory */
    };

    reserved-memory {
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;

        /* USER CODE BEGIN reserved-memory */
        /* USER CODE END reserved-memory */

        gpu_reserved: gpu@dc000000 {
            reg = <0xdc000000 0x4000000>;
            no-map;
        };
    };

	/* USER CODE BEGIN root */
    aliases {
		ethernet0 = &ethernet0;
		serial0 = &uart4;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};
	/* USER CODE END root */

    clocks {
        /* USER CODE BEGIN clocks */
        /* USER CODE END clocks */

        clk_lsi: clk-lsi {
            clock-frequency = <32000>;
        };
        clk_hsi: clk-hsi {
            clock-frequency = <64000000>;
        };
        clk_csi: clk-csi {
            clock-frequency = <4000000>;
        };
        clk_hse: clk-hse {
            clock-frequency = <24000000>;
        };
    };

}; /*root*/

&pinctrl {
    u-boot,dm-pre-reloc;
    eth1_pins_mx: eth1_mx-0 {
				pins-1 {
					pinmux =  <STM32_PINMUX('A', 1, AF0)>, /* ETH_CLK */
						 <STM32_PINMUX('A', 2, AF11)>, /* ETH_MDIO */
						 <STM32_PINMUX('C', 1, AF11)>, /* ETH_MDC */
						 <STM32_PINMUX('A', 7, AF11)>, /* ETH_RX_DV */
						 <STM32_PINMUX('B', 11, AF11)>, /* ETH_TX_EN */
						 <STM32_PINMUX('C', 4, AF11)>, /* ETH_RX_D0 */
						 <STM32_PINMUX('C', 5, AF11)>, /* ETH_RX_D1 */
						 <STM32_PINMUX('G', 13, AF11)>, /* ETH_TX_D0 */
						 <STM32_PINMUX('G', 14, AF11)>, /* ETH_TX_D1 */
						 <STM32_PINMUX('D', 10, GPIO)>;
					bias-disable;
					drive-push-pull;
					slew-rate = <3>;
				};
		
	pins-2 {
                    pinmux = <STM32_PINMUX('D', 10, GPIO)>;
                    bias-pull-up;
                    drive-push-pull;
                    output-low;
                    slew-rate = <0>;
				};
    };

    fdcan1_pins_mx: fdcan1_mx-0 {
        pins1 {
            pinmux = <STM32_PINMUX('H', 13, AF9)>; /* FDCAN1_TX */
            bias-disable;
            drive-push-pull;
            slew-rate = <0>;
        };
        pins2 {
            pinmux = <STM32_PINMUX('H', 14, AF9)>; /* FDCAN1_RX */
            bias-disable;
        };
    };
    fmc_pins_mx: fmc_mx-0 {
        u-boot,dm-pre-reloc;
        pins1 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
                     <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
                     <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
                     <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
                     <STM32_PINMUX('D', 11, AF12)>, /* FMC_CLE */
                     <STM32_PINMUX('D', 12, AF12)>, /* FMC_ALE */
                     <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
                     <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
                     <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
                     <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
                     <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
                     <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
                     <STM32_PINMUX('G', 9, AF12)>; /* FMC_NCE */
            bias-disable;
            drive-push-pull;
            slew-rate = <1>;
        };
        pins2 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
            bias-disable;
        };
    };
    i2c2_pins_mx: i2c2_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
                     <STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
            bias-disable;
            drive-open-drain;
            slew-rate = <0>;
        };
    };
    i2c4_pins_mx: i2c4_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('H', 11, AF4)>, /* I2C4_SCL */
                     <STM32_PINMUX('H', 12, AF4)>; /* I2C4_SDA */
            bias-disable;
            drive-open-drain;
            slew-rate = <0>;
        };
    };
    sai2a_pins_mx: sai2a_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('E', 0, AF10)>, /* SAI2_MCLK_A */
                     <STM32_PINMUX('I', 5, AF10)>, /* SAI2_SCK_A */
                     <STM32_PINMUX('I', 6, AF10)>, /* SAI2_SD_A */
                     <STM32_PINMUX('I', 7, AF10)>; /* SAI2_FS_A */
            bias-disable;
            drive-push-pull;
            slew-rate = <0>;
        };
    };
    sai2b_pins_mx: sai2b_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('C', 0, AF8)>, /* SAI2_FS_B */
                     <STM32_PINMUX('E', 6, AF10)>, /* SAI2_MCLK_B */
                     <STM32_PINMUX('F', 11, AF10)>, /* SAI2_SD_B */
                     <STM32_PINMUX('H', 2, AF10)>; /* SAI2_SCK_B */
            bias-disable;
            drive-push-pull;
            slew-rate = <0>;
        };
    };
    sdmmc1_pins_mx: sdmmc1_mx-0 {
        u-boot,dm-pre-reloc;
        pins1 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
                     <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
                     <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
                     <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
                     <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
            bias-pull-up;
            drive-push-pull;
            slew-rate = <1>;
        };
        pins2 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
            bias-disable;
            drive-push-pull;
            slew-rate = <3>;
        };
    };
    sdmmc2_pins_mx: sdmmc2_mx-0 {
        u-boot,dm-pre-reloc;
        pins1 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
                    <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
                    <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
                    <STM32_PINMUX('B', 4, AF9)>, /* SDMMC2_D3 */
                    <STM32_PINMUX('G', 6, AF10)>, /* SDMMC2_CMD */
                    <STM32_PINMUX('A', 8, AF9)>, /* SDMMC2_D4 */
                    <STM32_PINMUX('A', 9, AF10)>, /* SDMMC2_D5 */
                    <STM32_PINMUX('E', 5, AF9)>, /* SDMMC2_D6 */
                    <STM32_PINMUX('C', 7, AF10)>; /* SDMMC2_D7 */
            slew-rate = <3>;
            drive-push-pull;
            bias-pull-up;
        };
        pins2 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
            bias-disable;
            drive-push-pull;
            slew-rate = <3>;
        };
    };

    uart4_pins_mx: uart4_mx-0 {
        u-boot,dm-pre-reloc;
        pins1 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('G', 11, AF6)>, /* UART4_TX */
                     <STM32_PINMUX('D', 10, GPIO)>;
            bias-disable;
            drive-push-pull;
            slew-rate = <0>;
        };
        pins2 {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
            bias-disable;
        };
    };
    eth1_sleep_pins_mx: eth1_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('A', 1, ANALOG)>, /* ETH1_CLK */
                     <STM32_PINMUX('A', 2, ANALOG)>, /* ETH1_MDIO */
                     <STM32_PINMUX('A', 7, ANALOG)>, /* ETH1_CRS_DV */
                     <STM32_PINMUX('B', 11, ANALOG)>, /* ETH1_TX_EN */
                     <STM32_PINMUX('C', 1, ANALOG)>, /* ETH1_MDC */
                     <STM32_PINMUX('C', 4, ANALOG)>, /* ETH1_RXD0 */
                     <STM32_PINMUX('C', 5, ANALOG)>, /* ETH1_RXD1 */
                     <STM32_PINMUX('G', 8, ANALOG)>, /* ETH1_PPS_OUT */
                     <STM32_PINMUX('G', 13, ANALOG)>, /* ETH1_TXD0 */
                     <STM32_PINMUX('G', 14, ANALOG)>; /* ETH1_TXD1 */
        };
    };
    fdcan1_sleep_pins_mx: fdcan1_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('H', 13, ANALOG)>, /* FDCAN1_TX */
                     <STM32_PINMUX('H', 14, ANALOG)>; /* FDCAN1_RX */
        };
    };
    fmc_sleep_pins_mx: fmc_sleep_mx-0 {
        u-boot,dm-pre-reloc;
        pins {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
                     <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
                     <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
                     <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
                     <STM32_PINMUX('D', 6, ANALOG)>, /* FMC_NWAIT */
                     <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_CLE */
                     <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_ALE */
                     <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
                     <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
                     <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
                     <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
                     <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
                     <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
                     <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NCE */
        };
    };
    i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('H', 4, ANALOG)>, /* I2C2_SCL */
                     <STM32_PINMUX('H', 5, ANALOG)>; /* I2C2_SDA */
        };
    };
    i2c4_sleep_pins_mx: i2c4_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('H', 11, ANALOG)>, /* I2C4_SCL */
                     <STM32_PINMUX('H', 12, ANALOG)>; /* I2C4_SDA */
        };
    };
    sai2a_sleep_pins_mx: sai2a_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('E', 0, ANALOG)>, /* SAI2_MCLK_A */
                     <STM32_PINMUX('I', 5, ANALOG)>, /* SAI2_SCK_A */
                     <STM32_PINMUX('I', 6, ANALOG)>, /* SAI2_SD_A */
                     <STM32_PINMUX('I', 7, ANALOG)>; /* SAI2_FS_A */
        };
    };
    sai2b_sleep_pins_mx: sai2b_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('C', 0, ANALOG)>, /* SAI2_FS_B */
                     <STM32_PINMUX('E', 6, ANALOG)>, /* SAI2_MCLK_B */
                     <STM32_PINMUX('F', 11, ANALOG)>, /* SAI2_SD_B */
                     <STM32_PINMUX('H', 2, ANALOG)>; /* SAI2_SCK_B */
        };
    };
    sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
        u-boot,dm-pre-reloc;
        pins {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
                     <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
                     <STM32_PINMUX('C', 10, ANALOG)>, /* SDMMC1_D2 */
                     <STM32_PINMUX('C', 11, ANALOG)>, /* SDMMC1_D3 */
                     <STM32_PINMUX('C', 12, ANALOG)>, /* SDMMC1_CK */
                     <STM32_PINMUX('D', 2, ANALOG)>; /* SDMMC1_CMD */
        };
    };
    sdmmc2_sleep_pins_mx: sdmmc2_sleep_mx-0 {
        u-boot,dm-pre-reloc;
        pins {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('A', 8, ANALOG)>, /* SDMMC2_D4 */
                     <STM32_PINMUX('A', 9, ANALOG)>, /* SDMMC2_D5 */
                     <STM32_PINMUX('B', 3, ANALOG)>, /* SDMMC2_D2 */
                     <STM32_PINMUX('B', 4, ANALOG)>, /* SDMMC2_D3 */
                     <STM32_PINMUX('B', 14, ANALOG)>, /* SDMMC2_D0 */
                     <STM32_PINMUX('B', 15, ANALOG)>, /* SDMMC2_D1 */
                     <STM32_PINMUX('C', 7, ANALOG)>, /* SDMMC2_D7 */
                     <STM32_PINMUX('E', 3, ANALOG)>, /* SDMMC2_CK */
                     <STM32_PINMUX('E', 5, ANALOG)>, /* SDMMC2_D6 */
                     <STM32_PINMUX('G', 6, ANALOG)>; /* SDMMC2_CMD */
        };
    };
    uart4_sleep_pins_mx: uart4_sleep_mx-0 {
        u-boot,dm-pre-reloc;
        pins {
            u-boot,dm-pre-reloc;
            pinmux = <STM32_PINMUX('B', 14, ANALOG)>, /* USART1_TX */
                     <STM32_PINMUX('B', 15, ANALOG)>; /* USART1_RX */
        };
    };
};
&pinctrl_z {
    u-boot,dm-pre-reloc;
    i2c6_pins_z_mx: i2c6_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('Z', 3, AF2)>, /* I2C6_SDA */
                     <STM32_PINMUX('Z', 4, AF2)>; /* I2C6_SCL */
            bias-disable;
            drive-open-drain;
            slew-rate = <0>;
        };
    };
    i2c6_sleep_pins_z_mx: i2c6_sleep_mx-0 {
        pins {
            pinmux = <STM32_PINMUX('Z', 3, ANALOG)>, /* I2C6_SDA */
                     <STM32_PINMUX('Z', 4, ANALOG)>; /* I2C6_SCL */
        };
    };
};

&m4_rproc{
    recovery;
    status = "okay";

    /* USER CODE BEGIN m4_rproc */
    /* USER CODE END m4_rproc */
};

&bsec{
    status = "okay";

    /* USER CODE BEGIN bsec */
    /* USER CODE END bsec */
};


&fmc{
    u-boot,dm-pre-reloc;
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&fmc_pins_mx>;
    pinctrl-1 = <&fmc_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN fmc */
    /* USER CODE END fmc */
};

&gpu{
    status = "okay";

    /* USER CODE BEGIN gpu */
    /* USER CODE END gpu */
};

&i2c2{
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&i2c2_pins_mx>;
    pinctrl-1 = <&i2c2_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN i2c2 */
    /* USER CODE END i2c2 */
};

&i2c4{
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&i2c4_pins_mx>;
    pinctrl-1 = <&i2c4_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN i2c4 */
    /* USER CODE END i2c4 */
};

&i2c6{
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&i2c6_pins_z_mx>;
    pinctrl-1 = <&i2c6_sleep_pins_z_mx>;
    status = "okay";

    /* USER CODE BEGIN i2c6 */
    /* USER CODE END i2c6 */
};

&ltdc{
    u-boot,dm-pre-reloc;
    status = "disabled";

    /* USER CODE BEGIN ltdc */
    /* USER CODE END ltdc */
};

&m_can1{
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&fdcan1_pins_mx>;
    pinctrl-1 = <&fdcan1_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN m_can1 */
    /* USER CODE END m_can1 */
};

&rcc{
    u-boot,dm-pre-reloc;
    status = "okay";

    /* USER CODE BEGIN rcc */
    /* USER CODE END rcc */
};

&rtc{
    status = "okay";

    /* USER CODE BEGIN rtc */
    /* USER CODE END rtc */
};

&sai2{
    status = "okay";

    /* USER CODE BEGIN sai2 */
    /* USER CODE END sai2 */

    sai2a:audio-controller@4400b004{
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&sai2a_pins_mx>;
        pinctrl-1 = <&sai2a_sleep_pins_mx>;
        status = "okay";

        /* USER CODE BEGIN sai2a */
        /* USER CODE END sai2a */
    };

    sai2b:audio-controller@4400b024{
        pinctrl-names = "default", "sleep";
        pinctrl-0 = <&sai2b_pins_mx>;
        pinctrl-1 = <&sai2b_sleep_pins_mx>;
        status = "okay";

        /* USER CODE BEGIN sai2b */
        /* USER CODE END sai2b */
    };
};

&sdmmc1{
    u-boot,dm-pre-reloc;
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&sdmmc1_pins_mx>;
    pinctrl-1 = <&sdmmc1_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN sdmmc1 */
	broken-cd;
    st,negedge;
    bus-width=<4>;
    /* USER CODE END sdmmc1 */
};

&sdmmc2{
    u-boot,dm-pre-reloc;
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&sdmmc2_pins_mx>;
    pinctrl-1 = <&sdmmc2_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN sdmmc2 */
    /* USER CODE END sdmmc2 */
};

&uart4{
    u-boot,dm-pre-reloc;
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&uart4_pins_mx>;
    pinctrl-1 = <&uart4_sleep_pins_mx>;
    status = "okay";

    /* USER CODE BEGIN uart4 */
    /* USER CODE END uart4 */
};

&usbh_ehci{
    status = "okay";

    /* USER CODE BEGIN usbh_ehci */
   	phy-names = "usb";
	phys = <&usbphyc_port0>;

    /* USER CODE END usbh_ehci */
};

&usbh_ohci{
    status = "okay";

    /* USER CODE BEGIN usbh_ohci */
    /* USER CODE END usbh_ohci */
};


&usbphyc{
    status = "okay";

    /* USER CODE BEGIN usbphyc */
    /* USER CODE END usbphyc */
};

&usbphyc_port0{
    status = "okay";

    /* USER CODE BEGIN usbphyc_port0 */
    /* USER CODE END usbphyc_port0 */
};

&usbphyc_port1{
    status = "okay";

    /* USER CODE BEGIN usbphyc_port1 */
    /* USER CODE END usbphyc_port1 */
};

/* USER CODE BEGIN addons */

&iwdg2{
    status = "okay";
    secure-status = "okay";

    /* USER CODE BEGIN iwdg2 */
    instance = <2>;
    timeout-sec = <32>;
    /* USER CODE END iwdg2 */
};

&fmc {
	pinctrl-names = "default";
	pinctrl-0 = <&fmc_pins_a>;
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	nand: nand@0 {
		reg = <0>;
		nand-on-flash-bbt;
		#address-cells = <1>;
		#size-cells = <1>;
		
        partition@0 {
            label = "nand-boot";
            reg = <0x00000000 0x01400000>;
        };

        partition@1400000 {
            label = "nand-fs";
            reg = <0x01400000 0x1e000000>;
        };
	};
};

&ethernet0 {
    pinctrl-names = "default";
    pinctrl-0 = <&eth1_pins_mx>;
	phy-mode = "rmii";
	max-speed = <100>;
	phy-handle = <&phy0>;
	snps,ps-speed = <100>;
    st,eth_ref_clk_sel;
	status = "disabled";

    clock-names = "stmmaceth",
                "mac-clk-tx",
                "mac-clk-rx",
                "ethstp",
                "syscfg-clk",
                "eth-ck";

    clocks = <&rcc ETHMAC>,
            <&rcc ETHTX>,
            <&rcc ETHRX>,
            <&rcc ETHSTP>,
            <&rcc SYSCFG>,
            <&rcc ETHCK>;
	
    mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
		snps,reset-gpio = <&gpioa 13 0>;
		snps,reset-delays-us = <25>;
		snps,reset-active-low;

		phy0: ethernet-phy-0 {
			reg = <0>;
		};
	};
};


/* USER CODE END addons */

